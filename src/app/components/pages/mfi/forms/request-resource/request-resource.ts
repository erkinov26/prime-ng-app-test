import {
  AfterViewInit,
  ChangeDetectorRef,
  Component,
  inject,
} from '@angular/core';
import {
  FormBuilder,
  FormGroup,
  Validators,
  ReactiveFormsModule,
} from '@angular/forms';
import { TextInput } from '../../../../shared/inputs/text-input/text-input';
import { DatePicker } from '../../../../shared/inputs/date-picker/date-picker';
import { ButtonModule } from 'primeng/button';
import { InputFieldsI } from '../../../../../core/interfaces/input_fields';

@Component({
  selector: 'app-request-resource',
  standalone: true,
  imports: [ReactiveFormsModule, TextInput, DatePicker, ButtonModule],
  templateUrl: './request-resource.html',
  styleUrl: './request-resource.css',
})
export class RequestResource implements AfterViewInit {
  private fb = inject(FormBuilder);
  private cdr = inject(ChangeDetectorRef);

  requestResource: FormGroup = this.fb.group({});

  input_fields: InputFieldsI[] = [
    {
      controlName: 'sbu_code',
      type: 'text',
      label: '–¶–ë–£ –∫–æ–¥',
      placeholder: '–¶–ë–£ –∫–æ–¥–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[18%] flex flex-col gap-2',
    },
    {
      controlName: 'client_code',
      type: 'text',
      label: '–ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞',
      placeholder: '–ö–ª–∏–µ–Ω—Ç –∫–æ–¥–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[18%] flex flex-col gap-2',
    },
    {
      controlName: 'client_name',
      type: 'text',
      label: '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞',
      placeholder: '–ö–ª–∏–µ–Ω—Ç –Ω–æ–º–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[18%] flex flex-col gap-2',
    },
    {
      controlName: 'booking_date',
      type: 'date',
      label: '–î–∞—Ç–∞ –±—Ä–æ–Ω–∏',
      placeholder: '–ë—Ä–æ–Ω—å —Å–∞–Ω–∞—Å–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥',
      class: 'w-[18%]  flex flex-col gap-2',
    },
    {
      controlName: 'booking_amount',
      type: 'number',
      label: '–°—É–º–º–∞ –±—Ä–æ–Ω–∏',
      placeholder: '–ë—Ä–æ–Ω—å —Å—É–º–º–∞—Å–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[18%] flex flex-col gap-2',
    },
    {
      controlName: 'booking_balance',
      type: 'number',
      label: '–û—Å—Ç–∞—Ç–æ–∫ –±—Ä–æ–Ω–∏',
      placeholder: '–ë—Ä–æ–Ω—å “õ–æ–ª–¥–∏“ì–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[22.5%] flex flex-col gap-2',
    },
    {
      controlName: 'transaction_start_date',
      type: 'date',
      label: '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞',
      placeholder: '–ê–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞ –±–æ—à–ª–∞–Ω–∏—à —Å–∞–Ω–∞—Å–∏',
      class: 'w-[22.5%] flex flex-col gap-2',
    },
    {
      controlName: 'transaction_end_date',
      type: 'date',
      label: '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞',
      placeholder: '–ê–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞ —Ç—É–≥–∞—à —Å–∞–Ω–∞—Å–∏',
      class: 'w-[22.5%] flex flex-col gap-2',
    },
    {
      controlName: 'transaction_amount',
      type: 'text',
      label: '–°—É–º–º–∞ –∞–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞',
      placeholder: '–ê–Ω–∫–µ—Ç–∞ —Ç—Ä–∞–Ω—à–∞ —Å—É–º–º–∞—Å–∏–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥',
      class: 'w-[22.5%] flex flex-col gap-2',
    },
  ];

  constructor() {
    // this.requestResource = this.buildForm();
  }

  // buildForm(): FormGroup {
  //   const group: { [key: string]: any } = {};
  //   this.input_fields.forEach((field) => {
  //     group[field.controlName] = [
  //       { value: '', disabled: field.disabled || false },
  //       Validators.nullValidator,
  //     ];
  //   });
  //   return this.fb.group(group);
  // }

  ngAfterViewInit(): void {
    this.cdr.detectChanges();
  }

  onSubmit() {
    if (this.requestResource.valid) {
      console.log('‚úÖ –†–µ—Å—É—Ä—Å –∑–∞–ø—Ä–æ—Å:', this.requestResource.value);
    } else {
      console.log('‚ùå –§–æ—Ä–º–∞–Ω–∏ —Ç—û–ª–∏“õ —Ç—û–ª–¥–∏—Ä–∏–Ω–≥.');
    }
  }

  onDelete() {
    console.log('üóëÔ∏è Forma o‚Äòchirildi:', this.requestResource.value);
    this.requestResource.reset(); // formani tozalash
  }
}
